import javax.crypto.Cipher
import javax.crypto.spec.IvParameterSpec
import javax.crypto.spec.SecretKeySpec

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
def configProperties = new Properties()
def configPropertiesFile = rootProject.file('config.properties')
if (configPropertiesFile.exists()) {
    configProperties.load(new FileInputStream(configPropertiesFile))
}
def pass_decryption = configProperties['PASSWORD']
println pass_decryption
def location_key = secureDecrypt(pass_decryption, pass_decryption, configProperties['LOCATION_KEY'])
def app_id_key = secureDecrypt(pass_decryption, pass_decryption, configProperties['APP_ID'])


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "m.n.dailyforecast"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "version"
    productFlavors {
        development {
            applicationIdSuffix ".development"
            resValue "string", "app_name", "DailyForecast Dev"
            buildConfigField "String", "LOCATION_KEY", "\"$location_key\""
            buildConfigField "String", "APP_ID", "\"$app_id_key\""
        }
        staging {
            applicationIdSuffix ".staging"
            resValue "string", "app_name", "DailyForecast Staging"
            buildConfigField "String", "LOCATION_KEY", "\"$location_key\""
            buildConfigField "String", "APP_ID", "\"$app_id_key\""
        }
        production {
            resValue "string", "app_name", "DailyForecast"
            buildConfigField "String", "LOCATION_KEY", "\"$location_key\""
            buildConfigField "String", "APP_ID", "\"$app_id_key\""
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation 'androidx.fragment:fragment-ktx:1.2.5'
    //glide
    implementation("com.github.bumptech.glide:glide:4.9.0@aar") {
        transitive = true
        exclude group: "com.android.support"
    }
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava3:$room_version"
    //rx
    implementation "io.reactivex.rxjava3:rxandroid:$rx_version"
    implementation "io.reactivex.rxjava3:rxjava:$rx_version"
    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofi_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofi_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofi_version"
    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltAndroidXVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"
    //
    implementation 'com.android.support:multidex:1.0.3'
    //testing
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}


static String secureDecrypt(String pass, String vector, String value) {
    println(vector)
    def cipherText = value.decodeBase64()
    def bytesVector = vector.getBytes("UTF-8")
    println(bytesVector.length)
    def iv = new IvParameterSpec(bytesVector)
    Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING")
    SecretKeySpec key = new SecretKeySpec(pass.getBytes("UTF-8"), "AES")
    cipher.init(Cipher.DECRYPT_MODE, key, iv)
    new String(cipher.doFinal(cipherText), "UTF-8")
}
